{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"PyTorch on TPUs: Fast Neural Style Transfer","provenance":[{"file_id":"https://github.com/pytorch/xla/blob/master/contrib/colab/style_transfer_inference.ipynb","timestamp":1629329856390}],"collapsed_sections":[],"machine_shape":"hm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"TPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"dbOTXWKBnBiP"},"source":["![alt text](https://i.imgur.com/ipYa6Q8.png)"]},{"cell_type":"markdown","metadata":{"id":"h1mYGqkc1kqv"},"source":["## PyTorch on TPUs: Fast Neural Style Transfer\n","\n","This notebook lets you run a pre-trained fast neural style transfer network implemented in PyTorch on a Cloud TPU. You can combine pictures and styles to create fun new images. \n","\n","You can learn more about fast neural style transfer from its implementation [here](https://github.com/pytorch/examples/tree/master/fast_neural_style) or the original paper, available [here](https://arxiv.org/abs/1603.08155).\n","\n","This notebook loads PyTorch and stores the network on your Google drive. After this automated setup process (it takes a couple minutes) you can put in a link to an image and see your style applied in seconds!\n","\n","You can find more examples of running PyTorch on TPUs [here](https://github.com/pytorch/xla/tree/master/contrib/colab), including tutorials on how to run PyTorch on hundreds of TPUs with Google Cloud Platform. "]},{"cell_type":"markdown","metadata":{"id":"YofXQrnxmf5r"},"source":["### Installs PyTorch & Loads the Networks\n","(This may take a couple minutes.)\n","\n","Fast neural style transfer networks use the same architecture but different weights to encode their styles. This notebook creates four fast neural style transfer networks: \"rain princess,\" \"candy,\" \"mosaic,\" and \"udnie.\" You can apply these styles below."]},{"cell_type":"code","metadata":{"id":"sg7i8Wk6Iblu","executionInfo":{"status":"ok","timestamp":1629343152233,"user_tz":-540,"elapsed":5,"user":{"displayName":"SHOT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh5vvPwI0wxV86goecWvaz89UBqVzkx1WnnD5ovSU8=s64","userId":"16892596591524153853"}}},"source":["import os\n","assert os.environ['COLAB_TPU_ADDR'], 'Make sure to select TPU from Edit > Notebook settings > Hardware accelerator'"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"C7fLX2EdIjL_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1629343173712,"user_tz":-540,"elapsed":21483,"user":{"displayName":"SHOT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh5vvPwI0wxV86goecWvaz89UBqVzkx1WnnD5ovSU8=s64","userId":"16892596591524153853"}},"outputId":"cb8b2c79-77e6-4163-8d2f-ce5eb7c48986"},"source":["!pip install cloud-tpu-client==0.10 https://storage.googleapis.com/tpu-pytorch/wheels/torch_xla-1.9-cp37-cp37m-linux_x86_64.whl"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Collecting torch-xla==1.9\n","  Downloading https://storage.googleapis.com/tpu-pytorch/wheels/torch_xla-1.9-cp37-cp37m-linux_x86_64.whl (149.9 MB)\n","\u001b[K     |████████████████████████████████| 149.9 MB 18 kB/s \n","\u001b[?25hCollecting cloud-tpu-client==0.10\n","  Downloading cloud_tpu_client-0.10-py3-none-any.whl (7.4 kB)\n","Requirement already satisfied: oauth2client in /usr/local/lib/python3.7/dist-packages (from cloud-tpu-client==0.10) (4.1.3)\n","Collecting google-api-python-client==1.8.0\n","  Downloading google_api_python_client-1.8.0-py3-none-any.whl (57 kB)\n","\u001b[K     |████████████████████████████████| 57 kB 2.8 MB/s \n","\u001b[?25hRequirement already satisfied: six<2dev,>=1.6.1 in /usr/local/lib/python3.7/dist-packages (from google-api-python-client==1.8.0->cloud-tpu-client==0.10) (1.15.0)\n","Requirement already satisfied: google-auth-httplib2>=0.0.3 in /usr/local/lib/python3.7/dist-packages (from google-api-python-client==1.8.0->cloud-tpu-client==0.10) (0.0.4)\n","Requirement already satisfied: httplib2<1dev,>=0.9.2 in /usr/local/lib/python3.7/dist-packages (from google-api-python-client==1.8.0->cloud-tpu-client==0.10) (0.17.4)\n","Requirement already satisfied: google-api-core<2dev,>=1.13.0 in /usr/local/lib/python3.7/dist-packages (from google-api-python-client==1.8.0->cloud-tpu-client==0.10) (1.26.3)\n","Requirement already satisfied: uritemplate<4dev,>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from google-api-python-client==1.8.0->cloud-tpu-client==0.10) (3.0.1)\n","Requirement already satisfied: google-auth>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from google-api-python-client==1.8.0->cloud-tpu-client==0.10) (1.34.0)\n","Requirement already satisfied: googleapis-common-protos<2.0dev,>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from google-api-core<2dev,>=1.13.0->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (1.53.0)\n","Requirement already satisfied: packaging>=14.3 in /usr/local/lib/python3.7/dist-packages (from google-api-core<2dev,>=1.13.0->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (21.0)\n","Requirement already satisfied: pytz in /usr/local/lib/python3.7/dist-packages (from google-api-core<2dev,>=1.13.0->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (2018.9)\n","Requirement already satisfied: requests<3.0.0dev,>=2.18.0 in /usr/local/lib/python3.7/dist-packages (from google-api-core<2dev,>=1.13.0->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (2.23.0)\n","Requirement already satisfied: protobuf>=3.12.0 in /usr/local/lib/python3.7/dist-packages (from google-api-core<2dev,>=1.13.0->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (3.17.3)\n","Requirement already satisfied: setuptools>=40.3.0 in /usr/local/lib/python3.7/dist-packages (from google-api-core<2dev,>=1.13.0->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (57.4.0)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth>=1.4.1->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (4.7.2)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth>=1.4.1->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (4.2.2)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth>=1.4.1->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (0.2.8)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=14.3->google-api-core<2dev,>=1.13.0->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (2.4.7)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth>=1.4.1->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (0.4.8)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0dev,>=2.18.0->google-api-core<2dev,>=1.13.0->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0dev,>=2.18.0->google-api-core<2dev,>=1.13.0->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0dev,>=2.18.0->google-api-core<2dev,>=1.13.0->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0dev,>=2.18.0->google-api-core<2dev,>=1.13.0->google-api-python-client==1.8.0->cloud-tpu-client==0.10) (2021.5.30)\n","Installing collected packages: google-api-python-client, torch-xla, cloud-tpu-client\n","  Attempting uninstall: google-api-python-client\n","    Found existing installation: google-api-python-client 1.12.8\n","    Uninstalling google-api-python-client-1.12.8:\n","      Successfully uninstalled google-api-python-client-1.12.8\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","earthengine-api 0.1.278 requires google-api-python-client<2,>=1.12.1, but you have google-api-python-client 1.8.0 which is incompatible.\u001b[0m\n","Successfully installed cloud-tpu-client-0.10 google-api-python-client-1.8.0 torch-xla-1.9\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"-df27v_-Iqrb"},"source":["### Only run the below commented cell if you would like a nightly release"]},{"cell_type":"code","metadata":{"id":"6vDR6iDcfULe","executionInfo":{"status":"ok","timestamp":1629343173712,"user_tz":-540,"elapsed":4,"user":{"displayName":"SHOT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh5vvPwI0wxV86goecWvaz89UBqVzkx1WnnD5ovSU8=s64","userId":"16892596591524153853"}}},"source":["# VERSION = \"20200325\"  #@param [\"1.5\" , \"20200325\", \"nightly\"]\n","# !curl https://raw.githubusercontent.com/pytorch/xla/master/contrib/scripts/env-setup.py -o pytorch-xla-env-setup.py\n","# !python pytorch-xla-env-setup.py --version $VERSION"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"sPJVqAKyml5W","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1629343237285,"user_tz":-540,"elapsed":63576,"user":{"displayName":"SHOT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh5vvPwI0wxV86goecWvaz89UBqVzkx1WnnD5ovSU8=s64","userId":"16892596591524153853"}},"outputId":"2dce8fd7-499f-4050-9166-c4779e227b3c"},"source":["from google.colab.patches import cv2_imshow\n","import cv2\n","import sys\n","\n","# Configures repo in local colab fs\n","REPO_DIR = '/demo'\n","%mkdir -p \"$REPO_DIR\"\n","%cd \"$REPO_DIR\" \n","%rm -rf examples\n","!git clone https://github.com/pytorch/examples.git \n","%cd \"$REPO_DIR/examples/fast_neural_style\"\n","\n","# Download pretrained weights for styles\n","!python download_saved_models.py\n","%cd \"$REPO_DIR/examples/fast_neural_style/neural_style\"\n","\n","\n","## Creates pre-trained style networks\n","import argparse\n","import os\n","import sys\n","import time\n","import re\n","\n","import numpy as np\n","import torch\n","from torch.optim import Adam\n","from torch.utils.data import DataLoader\n","from torchvision import datasets\n","from torchvision import transforms\n","import torch_xla\n","import torch_xla.core.xla_model as xm\n","import torch_xla.debug.metrics as met\n","import torch_xla.distributed.parallel_loader as pl\n","import torch_xla.distributed.xla_multiprocessing as xmp\n","import torch_xla.utils.utils as xu\n","import utils\n","from transformer_net import TransformerNet\n","from vgg import Vgg16\n","\n","# Acquires the XLA device (a TPU core)\n","device = xm.xla_device()\n","\n","# Loads pre-trained weights\n","rain_princess_path = '../saved_models/rain_princess.pth'\n","candy_path = '../saved_models/candy.pth'\n","mosaic_path = '../saved_models/mosaic.pth'\n","udnie_path = '../saved_models/udnie.pth'\n","\n","# Loads the pre-trained weights into the fast neural style transfer\n","# network architecture and puts the network on the Cloud TPU core.\n","def load_style(path):\n","  with torch.no_grad():\n","    model = TransformerNet()\n","    state_dict = torch.load(path)\n","    # filters deprecated running_* keys from the checkpoint\n","    for k in list(state_dict.keys()):\n","        if re.search(r'in\\d+\\.running_(mean|var)$', k):\n","            del state_dict[k]\n","    model.load_state_dict(state_dict)\n","    return model.to(device)\n","\n","# Creates each fast neural style transfer network\n","rain_princess = load_style(rain_princess_path)\n","candy = load_style(candy_path)\n","mosaic = load_style(mosaic_path)\n","udnie = load_style(udnie_path)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["/demo\n","Cloning into 'examples'...\n","remote: Enumerating objects: 2871, done.\u001b[K\n","remote: Counting objects: 100% (8/8), done.\u001b[K\n","remote: Compressing objects: 100% (8/8), done.\u001b[K\n","remote: Total 2871 (delta 1), reused 3 (delta 0), pack-reused 2863\u001b[K\n","Receiving objects: 100% (2871/2871), 39.18 MiB | 22.68 MiB/s, done.\n","Resolving deltas: 100% (1437/1437), done.\n","/demo/examples/fast_neural_style\n","100% 23.9M/23.9M [00:00<00:00, 76.1MB/s]\n","/demo/examples/fast_neural_style/neural_style\n"],"name":"stdout"},{"output_type":"stream","text":["WARNING:root:Waiting for TPU to be start up with version pytorch-1.9...\n","WARNING:root:Waiting for TPU to be start up with version pytorch-1.9...\n","WARNING:root:TPU has started up successfully with version pytorch-1.9\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"j1w1G4AcWw9f"},"source":["## Try it out!\n","\n","The next cell loads and display an image from a URL. This image is styled by the following cell. You can re-run these two cells as often as you like to style multiple images.\n","\n","Start by copying and pasting an image URL here (or use the default corgi)."]},{"cell_type":"code","metadata":{"id":"EozMXwIV9iOJ","colab":{"base_uri":"https://localhost:8080/","height":994,"output_embedded_package_id":"1K1b0jflPqvDk-EL83RVeKBb2ERueWPr9"},"executionInfo":{"status":"ok","timestamp":1629343242028,"user_tz":-540,"elapsed":4754,"user":{"displayName":"SHOT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh5vvPwI0wxV86goecWvaz89UBqVzkx1WnnD5ovSU8=s64","userId":"16892596591524153853"}},"outputId":"d917ff9c-8639-44b4-fc52-a11fb34e8f01"},"source":["#@markdown ### Image URL (right click -> copy image address):\n","content_image_url = 'https://cdn.pixabay.com/photo/2021/08/12/10/38/mountains-6540497_1280.jpg' #@param {type:\"string\"}\n","content_image = 'content.jpg'\n","!wget -O \"$content_image\" \"$content_image_url\"\n","RESULT_IMAGE = '/tmp/result.jpg'\n","!rm -f \"$RESULT_IMAGE\"\n","img = cv2.imread(content_image, cv2.IMREAD_UNCHANGED)\n","\n","content_image = utils.load_image(content_image, scale=None)\n","content_transform = transforms.Compose([\n","        transforms.ToTensor(),\n","        transforms.Lambda(lambda x: x.mul(255))\n","    ])\n","content_image = content_transform(content_image)\n","content_image = content_image.unsqueeze(0).to(device)\n","\n","cv2_imshow(img)"],"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"e0vHw-aHoG-s"},"source":["To style your image simply uncomment the style you wish to apply below and run the cell!"]},{"cell_type":"code","metadata":{"id":"Z0j9i4EWctbU","colab":{"base_uri":"https://localhost:8080/","height":791,"output_embedded_package_id":"1OzZzrlOT9C6g8T2LtYrmtKOK9nfVWIuD"},"executionInfo":{"status":"ok","timestamp":1629343269944,"user_tz":-540,"elapsed":27920,"user":{"displayName":"SHOT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh5vvPwI0wxV86goecWvaz89UBqVzkx1WnnD5ovSU8=s64","userId":"16892596591524153853"}},"outputId":"aa4df40a-042d-4af8-edff-09b09b44b4d3"},"source":["with torch.no_grad():\n"," # output = rain_princess(content_image)\n","   output = candy(content_image)\n","#  output = mosaic(content_image)\n"," # output = udnie(content_image)\n","\n","\n","utils.save_image(RESULT_IMAGE, output[0].cpu())\n","img = cv2.imread(RESULT_IMAGE, cv2.IMREAD_UNCHANGED)\n","cv2_imshow(img)"],"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]}]}